import React, { useState, useRef, useEffect } from 'react';
import { gsap } from 'gsap';
import { Flip } from 'gsap/Flip';

gsap.registerPlugin(Flip);

const FirstIcon = () => (
<svg width="162" height="48" viewBox="0 0 162 48" fill="none" xmlns="http://www.w3.org/2000/svg">
  <path d="M3.73761 4.41766C2.26178 2.6735 3.50151 0.000488281 5.78629 0.000488281H29.367C31.6683 0.000488281 32.9686 2.6413 31.5655 4.46533L31.075 5.10293C30.4684 5.89161 30.571 7.01437 31.3106 7.68001V7.68001C32.6081 8.84778 31.782 11.0005 30.0364 11.0005H5.21408C3.46492 11.0005 2.6817 8.80637 4.03548 7.69874V7.69874C4.84037 7.04019 4.94947 5.84986 4.27771 5.05597L3.73761 4.41766Z" fill="#D9D9D9"/>
  <path d="M20.889 7.00049C22.036 7.00049 22.948 7.96312 22.8861 9.10844L22 25.5005L21.1139 40.1215C21.0499 41.1771 20.1751 42.0005 19.1175 42.0005L15.8825 42.0005C14.8249 42.0005 13.9501 41.1771 13.8861 40.1215L13 25.5005L12.1139 9.10844C12.052 7.96313 12.964 7.00049 14.111 7.00049L20.889 7.00049Z" fill="#D9D9D9"/>
  <path d="M83.0454 25.0454H92.0454L91.3777 36.3978C91.1911 39.5691 88.5649 42.0454 85.388 42.0454H84.0454L83.0454 25.0454Z" fill="#D9D9D9"/>
  <path d="M106.045 38.0454V29.0454H118.045C120.807 29.0454 123.045 31.284 123.045 34.0454V38.0454H106.045Z" fill="#D9D9D9"/>
  <path d="M83.0454 25.0454C83.0454 22.6816 83.511 20.341 84.4156 18.1571C85.3202 15.9733 86.6461 13.9889 88.3175 12.3175C89.989 10.646 91.9733 9.32017 94.1571 8.41558C96.341 7.511 98.6817 7.04541 101.045 7.04541L101.045 16.0454C99.8635 16.0454 98.6932 16.2782 97.6013 16.7305C96.5094 17.1828 95.5172 17.8457 94.6815 18.6815C93.8458 19.5172 93.1828 20.5093 92.7305 21.6013C92.2782 22.6932 92.0454 23.8635 92.0454 25.0454H83.0454Z" fill="#D9D9D9"/>
  <path d="M96.3867 7.65876C98.6699 7.04696 101.051 6.89088 103.395 7.19941C105.738 7.50795 107.998 8.27507 110.045 9.45696C112.092 10.6389 113.887 12.2124 115.326 14.0877C116.765 15.963 117.82 18.1034 118.432 20.3867L109.739 22.716C109.433 21.5744 108.905 20.5042 108.186 19.5666C107.466 18.6289 106.569 17.8421 105.545 17.2512C104.522 16.6602 103.392 16.2767 102.22 16.1224C101.048 15.9681 99.8576 16.0462 98.716 16.3521L96.3867 7.65876Z" fill="#D9D9D9"/>
  <path d="M75 24C75 26.3638 74.5344 28.7044 73.6298 30.8883C72.7252 33.0722 71.3994 35.0565 69.7279 36.7279C68.0565 38.3994 66.0722 39.7252 63.8883 40.6298C61.7044 41.5344 59.3638 42 57 42L57 33C58.1819 33 59.3522 32.7672 60.4442 32.3149C61.5361 31.8626 62.5282 31.1997 63.364 30.364C64.1997 29.5282 64.8626 28.5361 65.3149 27.4442C65.7672 26.3522 66 25.1819 66 24H75Z" fill="#D9D9D9"/>
  <path d="M75 24C75 28.7739 73.1036 33.3523 69.7279 36.7279C66.3523 40.1036 61.7739 42 57 42L57 33C59.3869 33 61.6761 32.0518 63.364 30.364C65.0518 28.6761 66 26.3869 66 24L75 24Z" fill="#D9D9D9"/>
  <path d="M57 42C54.6362 42 52.2956 41.5344 50.1117 40.6298C47.9278 39.7252 45.9435 38.3994 44.2721 36.7279C42.6006 35.0565 41.2748 33.0722 40.3702 30.8883C39.4656 28.7044 39 26.3638 39 24L48 24C48 25.1819 48.2328 26.3522 48.6851 27.4442C49.1374 28.5361 49.8003 29.5282 50.636 30.364C51.4718 31.1997 52.4639 31.8626 53.5558 32.3149C54.6478 32.7672 55.8181 33 57 33V42Z" fill="#D9D9D9"/>
  <path d="M39 24C39 21.6362 39.4656 19.2956 40.3702 17.1117C41.2748 14.9278 42.6006 12.9435 44.2721 11.2721C45.9435 9.60063 47.9278 8.27476 50.1117 7.37017C52.2956 6.46559 54.6362 6 57 6L57 15C55.8181 15 54.6478 15.2328 53.5559 15.6851C52.4639 16.1374 51.4718 16.8003 50.636 17.636C49.8003 18.4718 49.1374 19.4639 48.6851 20.5559C48.2328 21.6478 48 22.8181 48 24H39Z" fill="#D9D9D9"/>
  <path d="M134.933 0.995079C135.952 0.455645 137.214 0.886709 137.69 1.93648L143.564 14.8871L148.731 26.5092C149.159 27.4699 148.769 28.5972 147.84 29.0893L144.954 30.6174C144.025 31.1094 142.874 30.7981 142.319 29.9049L135.61 19.0989L128.199 6.9625C127.598 5.97873 127.951 4.69213 128.97 4.15269L134.933 0.995079Z" fill="#D9D9D9"/>
  <path d="M159.447 13.0985C160.387 13.7564 160.582 15.068 159.874 15.9707L149.746 28.8901L140.634 40.3586C139.976 41.1867 138.787 41.3594 137.921 40.7528L135.271 38.8972C134.405 38.2906 134.161 37.1144 134.714 36.2129L142.374 23.7279L151.05 9.79208C151.656 8.81838 152.956 8.55294 153.895 9.21082L159.447 13.0985Z" fill="#D9D9D9"/>
</svg>


);



const SecondIcon = () => (
<svg width="162" height="48" viewBox="0 0 162 48" fill="none" xmlns="http://www.w3.org/2000/svg">
  <path d="M3.73761 4.5993C2.26178 2.85514 3.50151 0.182129 5.78629 0.182129H29.367C31.6683 0.182129 32.9686 2.82294 31.5655 4.64697L31.075 5.28457C30.4684 6.07325 30.571 7.19602 31.3106 7.86165V7.86165C32.6081 9.02942 31.782 11.1821 30.0364 11.1821H5.21408C3.46492 11.1821 2.6817 8.98801 4.03548 7.88038V7.88038C4.84037 7.22183 4.94947 6.0315 4.27771 5.23761L3.73761 4.5993Z" fill="#D9D9D9"/>
  <path d="M20.889 7.18213C22.036 7.18213 22.948 8.14476 22.8861 9.29008L22 25.6821L21.1139 40.3031C21.0499 41.3588 20.1751 42.1821 19.1175 42.1821L15.8825 42.1821C14.8249 42.1821 13.9501 41.3588 13.8861 40.3031L13 25.6821L12.1139 9.29008C12.052 8.14477 12.964 7.18213 14.111 7.18213L20.889 7.18213Z" fill="#D9D9D9"/>
  <path d="M83.0454 25.2271H92.0454L91.3777 36.5794C91.1911 39.7508 88.5649 42.2271 85.388 42.2271H84.0454L83.0454 25.2271Z" fill="#D9D9D9"/>
  <path d="M110 25H119V37C119 39.7614 116.761 42 114 42H110V25Z" fill="#D9D9D9"/>
  <path d="M83.0454 25.2271C83.0454 22.8633 83.511 20.5226 84.4156 18.3388C85.3202 16.1549 86.6461 14.1706 88.3175 12.4992C89.989 10.8277 91.9733 9.50184 94.1571 8.59725C96.341 7.69267 98.6817 7.22709 101.045 7.22709L101.045 16.2271C99.8635 16.2271 98.6932 16.4599 97.6013 16.9122C96.5094 17.3645 95.5172 18.0274 94.6815 18.8631C93.8458 19.6989 93.1828 20.691 92.7305 21.7829C92.2782 22.8749 92.0454 24.0452 92.0454 25.2271H83.0454Z" fill="#D9D9D9"/>
  <path d="M101 7C103.364 7 105.704 7.46559 107.888 8.37017C110.072 9.27475 112.056 10.6006 113.728 12.2721C115.399 13.9435 116.725 15.9278 117.63 18.1117C118.534 20.2956 119 22.6362 119 25H110C110 23.8181 109.767 22.6478 109.315 21.5558C108.863 20.4639 108.2 19.4718 107.364 18.636C106.528 17.8003 105.536 17.1374 104.444 16.6851C103.352 16.2328 102.182 16 101 16V7Z" fill="#D9D9D9"/>
  <path d="M75 24.1816C75 26.5454 74.5344 28.8861 73.6298 31.0699C72.7252 33.2538 71.3994 35.2381 69.7279 36.9096C68.0565 38.581 66.0722 39.9069 63.8883 40.8115C61.7044 41.7161 59.3638 42.1816 57 42.1816L57 33.1816C58.1819 33.1816 59.3522 32.9488 60.4442 32.4966C61.5361 32.0443 62.5282 31.3813 63.364 30.5456C64.1997 29.7099 64.8626 28.7177 65.3149 27.6258C65.7672 26.5339 66 25.3635 66 24.1816H75Z" fill="#D9D9D9"/>
  <path d="M57 6C61.7739 6 66.3523 7.89643 69.7279 11.2721C73.1036 14.6477 75 19.2261 75 24H66C66 21.6131 65.0518 19.3239 63.364 17.636C61.6761 15.9482 59.3869 15 57 15V6Z" fill="#D9D9D9"/>
  <path d="M57 42.1816C54.6362 42.1816 52.2956 41.7161 50.1117 40.8115C47.9278 39.9069 45.9435 38.581 44.2721 36.9096C42.6006 35.2381 41.2748 33.2538 40.3702 31.0699C39.4656 28.8861 39 26.5454 39 24.1816L48 24.1816C48 25.3635 48.2328 26.5339 48.6851 27.6258C49.1374 28.7177 49.8003 29.7099 50.636 30.5456C51.4718 31.3813 52.4639 32.0443 53.5558 32.4966C54.6478 32.9488 55.8181 33.1816 57 33.1816V42.1816Z" fill="#D9D9D9"/>
  <path d="M39 24.1817C39 21.8179 39.4656 19.4772 40.3702 17.2934C41.2748 15.1095 42.6006 13.1252 44.2721 11.4538C45.9435 9.7823 47.9278 8.45643 50.1117 7.55184C52.2956 6.64726 54.6362 6.18168 57 6.18168L57 15.1817C55.8181 15.1817 54.6478 15.4145 53.5559 15.8668C52.4639 16.3191 51.4718 16.982 50.636 17.8177C49.8003 18.6534 49.1374 19.6456 48.6851 20.7375C48.2328 21.8295 48 22.9998 48 24.1817H39Z" fill="#D9D9D9"/>
  <path d="M134.933 1.17672C135.952 0.637286 137.214 1.06835 137.69 2.11812L143.564 15.0688L148.731 26.6908C149.159 27.6515 148.769 28.7789 147.84 29.2709L144.954 30.7991C144.025 31.2911 142.874 30.9797 142.319 30.0865L135.61 19.2806L128.199 7.14414C127.598 6.16037 127.951 4.87377 128.97 4.33433L134.933 1.17672Z" fill="#D9D9D9"/>
  <path d="M159.447 13.2801C160.387 13.938 160.582 15.2497 159.874 16.1523L149.746 29.0717L140.634 40.5403C139.976 41.3683 138.787 41.541 137.921 40.9344L135.271 39.0788C134.405 38.4722 134.161 37.296 134.714 36.3946L142.374 23.9095L151.05 9.97372C151.656 9.00002 152.956 8.73458 153.895 9.39246L159.447 13.2801Z" fill="#D9D9D9"/>
</svg>


);

const NameHover = () => {
  const [isHovered, setIsHovered] = useState(false);
  const svgContainerRef = useRef(null);

  useEffect(() => {
    if (svgContainerRef.current) {
      const state = Flip.getState(svgContainerRef.current);
      setTimeout(() => {
        Flip.from(state, {
          duration: 0.05  ,
          ease: 'power1.inOut',
        });
      });
    }
  }, [isHovered]);

  return (
    <div
      ref={svgContainerRef}
      className="svg-container"
      onMouseEnter={() => setIsHovered(true)}
      onMouseLeave={() => setIsHovered(false)}
    >
      {isHovered ? <SecondIcon /> : <FirstIcon />}
    </div>
  );
};



export default NameHover;
